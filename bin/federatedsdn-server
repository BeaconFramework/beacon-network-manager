#! /bin/sh

#------------------------------------------------------------------------------#
# Copyright 2010-2015, OpenNebula Systems                                      #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License"); you may      #
# not use this file except in compliance with the License. You may obtain      #
# a copy of the License at                                                     #
#                                                                              #
# http://www.apache.org/licenses/LICENSE-2.0                                   #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#


FEDERATED_SDN_PID=../federatedsdn-server.pid
FEDERATED_SDN_SERVER=../controllers/federatedsdn-server.rb
FEDERATED_SDN_LOCK_FILE=../.federatedsdn-server.lock
FEDERATED_SDN_LOG=../federatedsdn-server.log
FEDERATED_SDN_LOG_ERROR=../federatedsdn-server.error

setup()
{
  if [ -f $FEDERATED_SDN_LOCK_FILE ]; then
    if [ -f  $FEDERATED_SDN_PID ]; then
      FEDERATED_SDNPID=`cat $FEDERATED_SDN_PID`
      ps $FEDERATED_SDNPID > /dev/null 2>&1
      if [ $? -eq 0 ]; then
        echo "FederatedSDN Server is still running (PID:$FEDERATED_SDN_PID). Please try 'federated-sdn-server stop' first."
        exit 1
      fi
    fi
    echo "Stale .lock detected. Erasing it."
    rm $FEDERATED_SDN_LOCK_FILE
  fi
}

start()
{
  if [ ! -f "$FEDERATED_SDN_SERVER" ]; then
    echo "Cannot find $FEDERATED_SDN_SERVER."
    exit 1
  fi

  touch $FEDERATED_SDN_LOCK_FILE

  # Start the federated-sdn-server daemon
  ruby $FEDERATED_SDN_SERVER >$FEDERATED_SDN_LOG 2>$FEDERATED_SDN_LOG_ERROR &

  LASTRC=$?
  LASTPID=$!

  if [ $LASTRC -ne 0 ]; then
        echo "Error executing federated-sdn-server."
        echo "Check $FEDERATED_SDN_LOG for more information"
    exit 1
  else
    echo $LASTPID > $FEDERATED_SDN_PID
  fi

  sleep 2
  ps $LASTPID > /dev/null 2>&1

  if [ $? -ne 0 ]; then
        echo "Error executing federated-sdn-server."
        echo "Check $FEDERATED_SDN_LOG_ERROR or $FEDERATED_SDN_LOG for more information"
    exit 1
  fi

  echo "federated-sdn-server started"
}

#
# Function that stops the daemon/service
#
stop()
{
  if [ ! -f $FEDERATED_SDN_PID ]; then
    echo "Couldn't find federated-sdn-server process pid."
    exit 1
  fi

  # Kill the federated-sdn-server daemon

  kill -INT `cat $FEDERATED_SDN_PID` > /dev/null 2>&1

  # Remove pid files
  rm -f $FEDERATED_SDN_PID > /dev/null 2>&1
  rm -f $FEDERATED_SDN_LOCK_FILE &> /dev/null

  echo "federated-sdn-server stopped"
}


case "$1" in
  start)
  setup
  start
  ;;
  stop)
  stop
  ;;
  *)
  echo "Usage: federated-sdn-server {start|stop}" >&2
  exit 3
  ;;
esac


